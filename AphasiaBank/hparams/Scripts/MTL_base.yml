# ################################
# Paraphasia Decoding
# Encoder: Pretrained SSL Encoder
# Decoder: Transformer Decoder + (CTC/ATT joint) beamsearch
# Augmentation: SpecAugment
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 2000

# reset LR
FT_start: FT_start_PLACEHOLDER
train_flag: train_flag_PLACEHOLDER
frid_fold: frid_fold_PLACEHOLDER

token_type: "bpe" # unigram / bpe
output_neurons: output_neurons_PLACEHOLDER
para_output_neurons: 4

# Control MTL or STL objective
MTL_bool: True


__set_seed: !apply:torch.manual_seed [!ref <seed>]
w2v_model: hubert-large-ls960-ft
wav2vec2_hub: !ref facebook/<w2v_model>

output_folder: !ref output_PLACEHOLDER
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
data_dir: data_dir_PLACEHOLDER
data_folder: !ref <data_dir>output_neurons_PLACEHOLDER


# stages related parameters
lr_adam: lr_PLACEHOLDER
tb_logs: !ref <output_folder>/tb_logs

# Data files
train_splits: ["train"]
dev_splits: ["dev"]
test_splits: ["test"]
skip_prep: False
ckpt_interval_minutes: 30 # save checkpoint every N min
train_csv: !ref <data_dir>/train_multi.csv
valid_csv: !ref <data_dir>/dev_multi.csv
test_csv: !ref <data_dir>/test_multi.csv

# Training parameters
auto_mix_prec: False
max_length: 10 # change to 20
min_length: 0.5
max_sev_train: 4
min_sev_train: -1

# Training parameters
# To make Transformers converge, the global bath size should be large enough.
# The global batch size is computed as batch_size * n_gpus * gradient_accumulation.
# Empirically, we found that this value should be >= 128.
# Please, set your parameters accordingly.
number_of_epochs: epochs_PLACEHOLDER
batch_size: 10 # This works for 1x GPU with 40GB with no dynamic batching
ctc_weight: 0.2
grad_accumulation_factor: 4
max_grad_norm: 5.0
loss_reduction: 'batchmean'
sorting: ascending
num_workers: 4

# Dataloader options
train_dataloader_opts:
    batch_size: !ref <batch_size>
    shuffle: True
    num_workers: !ref <num_workers>
valid_dataloader_opts:
    batch_size: 1
test_dataloader_opts:
    batch_size: 1



# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 80



####################### Model parameters ###########################
# Transformer
d_model: 1024
nhead: 8
num_encoder_layers: 12
num_decoder_layers: 6
d_ffn: 2048
transformer_dropout: 0.1
activation: !name:torch.nn.GELU

# Outputs
blank_index: 0
label_smoothing: 0.0
pad_index: 0
bos_index: 1
eos_index: 2
unk_index: 3

# Decoding parameters
min_decode_ratio: 0.0
max_decode_ratio: 1.0
valid_search_interval: 100
lm_weight: 0.10
ctc_weight_decode: 0.2
test_beam_size: 75
valid_beam_size: 3

############################## models ################################


Transformer: !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerDecoderASR # yamllint disable-line rule:line-length
    input_size: 1280
    tgt_vocab: !ref <output_neurons>
    d_model: !ref <d_model>
    nhead: !ref <nhead>
    num_encoder_layers: 0
    num_decoder_layers: !ref <num_decoder_layers>
    d_ffn: !ref <d_ffn>
    dropout: !ref <transformer_dropout>
    activation: !ref <activation>
    encoder_module: transformer
    attention_type: regularMHA
    normalize_before: True
    causal: False

SSL_enc: !new:speechbrain.lobes.models.huggingface_wav2vec.HuggingFaceWav2Vec2
   source: !ref <wav2vec2_hub>
   output_norm: True
   freeze: freeze_ARCH_PLACEHOLDER
   freeze_feature_extractor: True
   save_path: !ref <save_folder>/wav2vec2_checkpoint


ctc_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <output_neurons>

seq_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <output_neurons>

para_seq_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <para_output_neurons>

normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global
    update_until_epoch: 4

modules:
    SSL_enc: !ref <SSL_enc>
    Transformer: !ref <Transformer>
    seq_lin: !ref <seq_lin>
    ctc_lin: !ref <ctc_lin>
    normalize: !ref <normalize>
    para_seq_lin: !ref <para_seq_lin>

model: !new:torch.nn.ModuleList
    - [!ref <SSL_enc>, !ref <Transformer>, !ref <seq_lin>, !ref <ctc_lin>]

para_model: !new:torch.nn.ModuleList
    - [!ref <para_seq_lin>]


# define two optimizers here for two-stage training
Adam: !name:torch.optim.Adam
    lr: !ref <lr_adam>
    betas: (0.9, 0.98)
    eps: 0.000000001


test_search: !new:speechbrain.decoders.S2STransformerBeamSearchPara
    modules: [!ref <Transformer>, !ref <seq_lin>, !ref <para_seq_lin>, !ref <ctc_lin>]
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    blank_index: !ref <blank_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <valid_beam_size>
    ctc_weight: !ref <ctc_weight_decode>
    # lm_weight: !ref <lm_weight_decode>
    # lm_modules: !ref <lm_model>
    # temperature: 1.15
    # temperature_lm: 1.15
    using_eos_threshold: False
    length_normalization: True


valid_search: !new:speechbrain.decoders.S2STransformerBeamSearchPara
    modules: [!ref <Transformer>, !ref <seq_lin>, !ref <para_seq_lin>, !ref <ctc_lin>]
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    blank_index: !ref <blank_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <valid_beam_size>
    ctc_weight: !ref <ctc_weight_decode>
    using_eos_threshold: False
    length_normalization: True

log_softmax: !new:torch.nn.LogSoftmax
    dim: -1

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>
    reduction: !ref <loss_reduction>


seq_cost: !name:speechbrain.nnet.losses.nll_loss
   label_smoothing: 0.1


noam_annealing: !new:speechbrain.nnet.schedulers.NoamScheduler
    lr_initial: !ref <lr_adam>
    n_warmup_steps: 25000

lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr_adam>
   improvement_threshold: 0.0025
   annealing_factor: 0.8
   patient: 1

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    allow_partial_load: True
    recoverables:
        model: !ref <model>
        lr_annealing: !ref <lr_annealing>
        normalizer: !ref <normalize>
        counter: !ref <epoch_counter>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounterWithStopper
   limit: !ref <number_of_epochs>
   limit_to_stop: 5
   limit_warmup: 5
   direction: "min"


augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
   sample_rate: !ref <sample_rate>
   speeds: [80, 90, 95, 100, 105, 110, 120]

speed_perturb: False

compute_features: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
   split_tokens: True
acc_computer: !name:speechbrain.utils.Accuracy.AccuracyStats
